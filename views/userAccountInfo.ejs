<!DOCTYPE html>
<head>
  <link href = "css/userAccountInfo.css" rel = "stylesheet"/>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/5.0.0-alpha1/css/bootstrap.min.css">

  <%-include("partials/userHomeBanner")-%>
  <table class = "contentTable">
    <tr>
      <td class = accountInfoColumn>
        <div id="accountInfoContainer">
      		<h2 id = "accountInfoHeader">
      			<div class = "headerFormat"> Your Account </div>
      		</h2>
      		<div class = "accountInfo">
      			<div class = "accountInfoFormat"> Email </div>
      		</div>
      		<div class = "accountInfo" id = "userEmail">
      			<div class = "accountInfoFormat"> insert email here </div>
      		</div>
      		<div class = "accountInfo">
      			<div class = "accountInfoFormat"> Name </div>
      		</div>
      		<div class = "accountInfo" id = "userName">
      			<div class = "accountInfoFormat"> insert name here </div>
      		</div>
      		<div class = "accountInfo">
      			<div class = "accountInfoFormat"> Password </div>
      		</div>
      		<div class = "accountInfo" id = "userPassword">
      			<div class = "accountInfoFormat"> insert password here </div>
      		</div>
      		<div class = "accountInfo">
      			<div class = "accountInfoFormat"> Address </div>
      		</div>
      		<div class = "accountInfo" id = "userAddress">
      			<div class = "accountInfoFormat"> insert address here </div>
      		</div>
      		<div class = "editInfoButtonContainer">
      			<button id = "editButtonID" class = "editButton">
      				Edit Information
      			</button>
      		</div>
      	</div>
      </td>

      <td class = orderHistoryColumn>
        <div id = "orderHistoryContainer">
      		<h2 id = "orderHistoryHeader">
      			<div class = "headerFormat"> Active/Previous Order History </div>
      		</h2>
      	</div>
      </td>

        <td class = supportTicketsColumn>
          <div class="container-fluid">
            <div class="row">
              <div id = "supportTicketsContainer">
                <h2 id = "accountInfoHeader">
                  <div class = "headerFormat"> Support Tickets </div>
                </h2>
              </div>
            </div>
            <div class="row">
              <div class="">
                <a href="/userTicket">
                  <button type="button" style="margin-top: 10px;"class="btn btn-primary btn-block" name="button">Submit a Ticket</button>
                </a>
              </div>
            </div>
          </div>
        </td>
    </tr>
  </table>
  <form id = "post1" style="display: none;" action = "/userAccountInfo" method = "post">
    <input type = "text" name = "email">
    <input type = "text" name = "name">
    <input type = "text" name = "password">
    <input type = "text" name = "address">
  </form>

  <form id="removeItem" style="display: none;" action="/userDeleteItem" method="post">
  <input type = "text" name = "item" >
  <input type = "text" name = "url" >
</form>

  <!-- //feedback from server -->
  <h1 style = "display:none" id = "ue"> <%=data%> </h1>

  <!-- //javascript for page functionality -->
	<script src="scriptsource/userAccountInfo.js"> </script>
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      let account = JSON.parse(document.getElementById("ue").innerHTML);

      let name = account.p.first
      let email = account.p.email;
      let password = account.p.password;
      let address = account.p.address;
      displayAccountInfo(email, name, password, address);

      //Displaying user's order history
      account.o.forEach(function(order){
        let name = order.vendorName;
        let image = order.image;
        let dish1, dish2, dish1Amount, dish2Amount, dish1price, dish2price;
        let counter = 0;
        let total = 0;
        order.items.forEach(function(item){
          total += item.price * item.quantity;
          if (counter == 0) {
            dish1 = item.name;
            dish1Amount = item.quantity;
            dish1price = item.price;
          } else if (counter == 1){
              dish2 = item.name;
              dish2Amount = item.quantity;
              dish2price = item.price;
          } counter++;
        });
        if (dish2 != null) buildOrderCard2(name, dish1, dish1Amount, dish2, dish2Amount, total.toFixed(2), image);
        else buildOrderCard1(name, dish1, dish1Amount, total.toFixed(2), image);
      });

      //displaying all of user's tickets
      account.t.forEach(function(ticket) {
        buildSupportTicket(ticket.receiverName, ticket.status, ticket.body);
      });

      // loop through each order, finding the active one
      account.o.forEach((order) => {
        if (!order.status) {
          // build shopping cart
          if (order.length == 0){}
          else {
            // let vName = menuAndOrder.order.vendorName;
            console.log(order.items);

            //iterating through order Object
            order.items.forEach(function (menuItems) {
              console.log(menuItems)
              addItemToShoppingCart(menuItems.name, menuItems.quantity, menuItems.price);
            });
          }
        }
      });


    });
  </script>
</body>
